name: procmon capture to xml

on:
  workflow_dispatch:
  push:
    branches: [main]

env:
  procmon_config: proc_config.pmc

jobs:
  generate_versioninfo:
    strategy:
      matrix:
        os: [windows-2019, windows-2022]
        # need to separate by jobs
        # include:
        #   - os: [windows-2019, windows-2022]
        #     paths: [ "C:\\Windows\\System32\\", "C:\\Program*\\Common*"]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - run: Set-MpPreference -DisableRealtimeMonitoring $true
        shell: powershell

      - name: install and start procmon
        run: |
          choco install procmon

      - name: pip install requirements
        run: |
          pip install -r requirements.txt

      - name: dump procmon config          
        run: |
          python dump_procmon_config.py ${{env.proc_config}}

      - name: start procmon
        shell: PowerShell
        run: | 
          Start-job -ArgumentList $(pwd) {$currentDir=$args[0];echo $currentDir; procmon.exe /AcceptEula /LoadConfig $currentDir/proc_config.pmc /BackingFile $currentDir/${{ matrix.os }}.capture.pml /Quiet /minimized }
          sleep 10
          Receive-Job *          

      # - name: Start all the services
      #   run: |
      #     # start as many things as possible
      #     $skip = ,"McpManagementService","McpManagementService (McpManagementService)"
      #     get-process
      #     Stop-Process -Name "devicecensus" -Force -ErrorAction SilentlyContinue
      #     Get-Service -ErrorAction SilentlyContinue | % { start-job -name $_.Name -ArgumentList @($_, $skip) -ScriptBlock { $service=$args[0];$skip=$args[1]; echo $service.Name; if ($skip.Contains($service.Name)) { continue }; Start-Service $service -ErrorAction SilentlyContinue} }   
      #     Get-Job

      - name: Stop Procmon
        shell: PowerShell
        run: |
          ls
          procmon.exe /AcceptEula /Terminate | Out-Null
          sleep 10
          ls 

      - name: convert to xml
        run: |
          procmon.exe /AcceptEula /OpenLog ${{ matrix.os }}.capture.pml /SaveAs ${{ matrix.os }}.capture.xml  | Out-Null      


      # Upload Artifacts
      - name: Upload procmon xml
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: procmon-files
          path: |
            ./*.xml
            ./*.pml
          retention-days: 5
